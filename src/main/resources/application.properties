# Path where database and everything will be saved
#savePath=/tmp/segrada
savePath=./segrada_data
# set to MEMORY or FILE
uploads.storage=MEMORY
# upload size in bytes: default 50MB
uploads.maximum_upload_size=52428800
# OrientDB settings
#orientDB.url=remote:localhost/Segrada
orientDB.url=plocal:./segrada_data/db
orientDB.login=admin
orientDB.password=admin
#Remote root and root password for creating databases remotely
orientDB.remote_root=
orientDB.remote_pw=
# Require login - otherwise user will be logged in automatically
requireLogin=false
# Allow anonymous login (requires requireLogin to be true)
allowAnonymous=false
# Solr server url - if this is set, Segrada will use the Solr server instead of the embedded Lucene index
solr.server=
# Solr field mapping: document id
solr.field_id = id
# Solr field mapping: classname string (should be string)
solr.field_className = className_s
# Solr field mapping: title text (should be indexed fulltext)
solr.field_title = title_t
# Solr field mapping: main content text (should be indexed fulltext)
solr.field_content = content_t
# Solr field mapping: tag string array (should be string multifield)
solr.field_tag = tag_ss
# Solr field mapping: color string (should be string, non-indexed, stored)
solr.field_color = color_s
# Solr field mapping: icon reference string (should be string, non-indexed, stored)
solr.icon = icon_s
# Lucene settings
lucene.analyzer=org.segrada.search.lucene.LuceneSegradaAnalyzer
# Embedded Jetty settings
server.port=8080
server.context=/
# Settings for map rendering (possible values: leaflet, ol - ol is outdated and will be deprecated in the future)
map.engine = leaflet
# Leaflet settings - the following settings only work with Leaflet, *not* with Open Layers!
# Default zoom level for Leaflet maps (maps with markers will zoom to bounds)
map.defaultZoom = 1
# Default coordinates for Leaflet maps (maps with markers will pan to markers)
map.defaultLat = 0
map.defaultLng = 0
# Map provider of the base map (see https://github.com/leaflet-extras/leaflet-providers) - for Stamen, try
# Stamen.TerrainBackground or Stamen.Terrain
# view a list of possible providers: http://leaflet-extras.github.io/leaflet-providers/preview/index.html
map.provider = Stamen.TerrainBackground
# Options that are passed to Provider Settings - see https://github.com/leaflet-extras/leaflet-providers
# These options use the pattern: map.option.<key> = <value>
# map.options.apikey = [insert your API key here]
# Class to load for BinaryDataService, possible values: org.segrada.service.binarydata.BinaryDataServiceFile
# and org.segrada.service.binarydata.BinaryDataServiceHadoop
binaryDataService=org.segrada.service.binarydata.BinaryDataServiceFile
# Comma separated list of config files to import into config (empty to set none)
binaryDataService.hadoop.configurationFiles=
# Server URI to connect to - overrides config file if set
binaryDataService.hadoop.fs.defaultFS=hdfs://localhost:9000/
# Hadoop root path to save Segrada stuff in
binaryDataService.hadoop.path=/segrada/
# Hadoop user name to set (same as environmental variable HADOOP_USER_NAME)
binaryDataService.hadoop.userName=
